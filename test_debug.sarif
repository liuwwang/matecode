{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "matecode AI review",
          "informationUri": "https://github.com/liuwwang/matecode",
          "rules": [
            {
              "id": "MATE001",
              "name": "PotentialBug",
              "shortDescription": {
                "text": "潜在的 Bug 或逻辑漏洞"
              },
              "fullDescription": {
                "text": "识别潜在的错误，例如差一错误、空指针问题或逻辑缺陷。"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "MATE002",
              "name": "Readability",
              "shortDescription": {
                "text": "代码可读性与可维护性"
              },
              "fullDescription": {
                "text": "强调与代码复杂度、命名、结构和注释相关的问题，这些问题会影响可读性和可维护性。"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "MATE003",
              "name": "BestPractice",
              "shortDescription": {
                "text": "更优或更现代的实践"
              },
              "fullDescription": {
                "text": "建议一种更现代、更高效或更安全的代码编写方式。"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "MATE002",
          "message": {
            "text": "通过条件判断动态选择模板名称的逻辑可以提取为一个独立的函数，以提高代码的可读性和可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    format: &str,\n    let template = get_prompt_template(\"report\").await?;"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "使用字符串字面量直接比较可能会导致维护困难，建议将模板名称定义为常量或枚举值，使代码更具可读性和安全性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    format: &str,\n    let template = get_prompt_template(\"report\").await?;"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "使用了更现代的日期格式化方式，提升了代码的安全性和可读性，建议继续保持这种写法。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        .replace(\"{start_date}\", &start_date.to_string())\n        .replace(\"{end_date}\", &end_date.to_string())"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "删除了不必要的多行注释和空行，虽然简化了代码，但可能降低了可读性。建议保留简洁注释以说明逻辑意图。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        \"today\" | \"t\" => {\n            // 今天"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "在处理不同输出格式时，应优先使用枚举类型来替代字符串匹配，以提高类型安全性和可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let summary =\n        generate_report_from_commits(llm_client.as_client(), &all_commits, start_date, end_date)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "代码中对JSON格式的处理逻辑较为冗长，建议将JSON验证与美化逻辑提取为独立函数，提升代码可读性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/report.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let summary =\n        generate_report_from_commits(llm_client.as_client(), &all_commits, start_date, end_date)"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "函数 `is_high_quality_finding` 过于复杂且职责不清，建议将不同的过滤条件拆分为独立的辅助函数以提升可读性和可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "use crate::git::{get_staged_diff, DiffChunk, ProjectContext};\nuse crate::llm::{parse_prompt_template, LLMClient};"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "使用 `serde_json::from_str` 直接解析 JSON 字符串存在风险，建议改用 `serde_json::from_slice` 并配合类型安全的反序列化方式提升代码健壮性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "use crate::git::{get_staged_diff, DiffChunk, ProjectContext};\nuse crate::llm::{parse_prompt_template, LLMClient};"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE001",
          "message": {
            "text": "条件判断中使用的变量从 `diff` 改为了 `diff_text`，但未确认 `diff_text` 是否已正确初始化或赋值，可能导致逻辑错误或空指针异常。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    if diff.is_empty() {\n    if diff_text.is_empty() {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "代码逻辑结构不够清晰，将条件判断中的代码块直接展开而非赋值给变量，降低了可读性和维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let lint_result = if lint {\n    if lint {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "使用 `_` 忽略 `handle_linter` 的返回值可能导致错误未被处理，建议显式处理或记录返回结果以确保程序稳定性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let lint_result = if lint {\n    if lint {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "代码逻辑较为复杂，建议将 `for` 循环内的 hunks 处理逻辑提取为独立函数，提升可读性和可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let review =\n        generate_code_review(llm_client.as_client(), &diff, lint_result.as_deref()).await?;"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "使用 `diffy::Line` 的模式匹配时，可以考虑引入枚举或封装类型来简化逻辑并提高类型安全性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/commands/review.rs"
                },
                "region": {
                  "snippet": {
                    "text": "    let review =\n        generate_code_review(llm_client.as_client(), &diff, lint_result.as_deref()).await?;"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "注释中的模型名称与实际配置的模型名称不一致，可能导致维护时产生混淆，建议统一为 'Gemini 1.5 Flash'。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        // Gemini 2.5 Flash 配置\n        // Gemini 1.5 Flash 配置"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "模型名称从 'gemini-2.0-flash-exp' 更新为 'gemini-1.5-flash-latest'，建议确认是否为最新推荐版本，并保持文档同步。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        // Gemini 2.5 Flash 配置\n        // Gemini 1.5 Flash 配置"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "代码格式调整虽然提升了可读性，但增加了不必要的换行和缩进，建议保持原有格式的一致性以减少视觉噪音。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        (\"plan_clarify_specific.toml\", get_plan_clarify_specific_prompt_template()),\n        ("
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "该函数包含大量文本字符串，可读性较差。建议将提示模板提取到独立的资源文件或使用外部配置，以提升代码的可维护性和分离关注点。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "fn get_report_json_prompt_template() -> &'static str {\n    r#\"[system]"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "函数名 `get_report_json_prompt_template` 虽然表达了意图，但可以更具描述性，例如 `get_git_commit_summary_prompt`，以更好地体现其用途。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "fn get_report_json_prompt_template() -> &'static str {\n    r#\"[system]"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "代码中存在多个硬编码的模板名称匹配，建议使用配置或枚举来管理这些模板，以提高可维护性和扩展性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        return Err(anyhow::anyhow!(\n            \"提示词模板文件不存在: {prompt_path:?}。请运行 'matecode init' 重新创建。\","
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "在处理模板内容时直接使用 replace 方法替换占位符，建议采用更安全的模板引擎或参数化方式，避免字符串拼接带来的安全风险。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        return Err(anyhow::anyhow!(\n            \"提示词模板文件不存在: {prompt_path:?}。请运行 'matecode init' 重新创建。\","
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "日语翻译中混入了中文字符“技术用语”，应统一使用日文表达，避免语言混杂影响可读性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/config.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        \"ja-JP\" => \"日本語で回答してください。すべての出力内容は日本語で、技術用語の説明も含めて日本語で記述してください。\".to_string(),\n        \"ja-JP\" => \"日本語で回答してください。すべての出力内容は日本語で、技术用語の説明も含めて日本語で記述してください。\".to_string(),"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "函数 extract_line_ranges_from_hunk 的逻辑较为复杂，嵌套层级较多，建议拆分正则匹配和行号处理逻辑，提升可读性和可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/git.rs"
                },
                "region": {
                  "snippet": {
                    "text": "/// 获取精确的diff信息（仅包含改动行，减少上下文干扰）\npub async fn get_precise_staged_diff() -> Result<String> {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE001",
          "message": {
            "text": "在 extract_line_ranges_from_hunk 中使用了 unwrap_or_else 和 ok().and_then() 来处理 Regex 匹配，如果正则表达式非法或匹配失败，可能导致逻辑异常，应增加更明确的错误处理机制。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/git.rs"
                },
                "region": {
                  "snippet": {
                    "text": "/// 获取精确的diff信息（仅包含改动行，减少上下文干扰）\npub async fn get_precise_staged_diff() -> Result<String> {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE001",
          "message": {
            "text": "正则表达式中使用了 `unwrap()`，在正则表达式编译失败时会导致程序 panic，应改为更安全的错误处理方式。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/llm/mod.rs"
                },
                "region": {
                  "snippet": {
                    "text": "\npub fn extract_json_array(text: &str) -> Option<String> {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "函数逻辑较为复杂，包含多个条件分支和字符串处理步骤，建议拆分为更小的函数以提高可读性和可测试性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/llm/mod.rs"
                },
                "region": {
                  "snippet": {
                    "text": "\npub fn extract_json_array(text: &str) -> Option<String> {"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "模式匹配的结构从旧版本的元组形式改为了结构体形式，虽然更清晰，但应确保所有字段都被正确处理且无遗漏，避免因字段增减导致的逻辑错误。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        commands::Commands::Commit { all, lint, structured } => {\n            commands::commit::handle_commit(all, lint, structured).await?"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "代码风格上，使用了更现代的 Rust 模式匹配语法（结构体形式），这提升了代码的可读性和可维护性，符合当前推荐实践。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        commands::Commands::Commit { all, lint, structured } => {\n            commands::commit::handle_commit(all, lint, structured).await?"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE002",
          "message": {
            "text": "命令处理逻辑中存在不一致的参数传递方式，`report` 和 `review` 命令对 `format` 参数的处理方式不同，建议统一处理逻辑以提升可维护性。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        } => commands::report::handler_report(since, until, period).await?,\n        commands::Commands::Review { lint } => commands::review::handle_review(lint).await?,"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "MATE003",
          "message": {
            "text": "在新增的 `format` 参数使用上，未明确其类型与默认值，可能导致运行时行为不一致，建议增加类型注解和默认值处理。"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.rs"
                },
                "region": {
                  "snippet": {
                    "text": "        } => commands::report::handler_report(since, until, period).await?,\n        commands::Commands::Review { lint } => commands::review::handle_review(lint).await?,"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
